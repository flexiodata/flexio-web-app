name: Collect data from an API
description:
id: collect-api-data
want: I want to collect data from an API

code: >
  Flexio.pipe()
    .request('http://uinames.com/api/?amount=10/')

steps:
  - #----------------------------------------#

    button:
      label: Next step
      action: next

    blurb: |
      ### Step 1. Access an API endpoint

      Here's the pipe we're going to build:

      * Make a request to a public API
      * Convert JSON to a table
      * Copy file to local storage

      **NOTE:** You can create authenticated API endpoints in the Connections area, but for this example we're simply using a public API that generates sample names.

      Click the **Run** button on the right to show the output.

  - #----------------------------------------#

    button:
      label: Next step
      action: next

    blurb: |
      ### Step 2. Add a conversion step

      Now we'll add a simple `convert` task that reformats the data from JSON to a table as follows:

      ```
      Flexio.pipe()
        .request('http://uinames.com/api/?amount=10/')
        .convert('json', 'table')
      ```

      Add this task and click the **Run** button again; you'll now see the output converted to a tabular format.

  - #----------------------------------------#

    button:
      label: Next step
      action: next

    blurb: |
      ### Step 3. Store the data locally in Flex.io storage

      Now that we have our data in tabular format, let's store it somewhere. For this example, we'll add it to our local Storage in your Flex.io account. Storage provides a quick access point for data collection or enrichment.

      The root path of your local storage is `/home`.  So, to collect this data in local storage, we'll simply add a `write` task.

      ```
      Flexio.pipe()
        .request('http://uinames.com/api/?amount=10/')
        .convert('json', 'table')
        .write('/home/${process.time.started}/sample-api.csv')
      ```

      **NOTE:** Currently the files are placed in timestamped subfolders; if you want to place the files in a different location, simply update the path like this: `.write('/{{connection_alias}}/foo/sample-api.csv')`.

      Add this task and click the **Run** button again. The data from the API will now appear as a CSV file in your local Storage.
